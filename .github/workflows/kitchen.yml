name: Kitchen Terraform Setup for Ops
on:
  repository_dispatch:
    types: [kitchen-terraform]
  workflow_dispatch:
    inputs:
      ref:
        description: 'github branch reference number'
        required: true
        default: 'Mona the Octocat'
      sha:
        description: 'github branch sha commit ID'
        required: true
        default: 'The Octoverse'
jobs:
  kitchenTest:
    runs-on: ubuntu-latest
    container: amitkuamrdube/kitchen-terraform:latest
    env : 
      GOOGLE_APPLICATION_CREDENTIALS: "my-first-project-298218-7e25767dcc93.json"
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          path: kitchen
      - name: Checkout code repo
        uses: actions/checkout@v2
        with:
          repository: amitkumardube/terraform-testing
          path: code 
      # setting the config file as per configuration variable
      - id : config-file-creation
        name : setup service account file
        run : |- 
          cat > my-first-project-298218-7e25767dcc93.json <<-EOF
            ${{ secrets.SA_KEY }}
          EOF
      - id : copy-json-file
        run : |
          cp my-first-project-298218-7e25767dcc93.json ./kitchen/test/fixtures/big_query/
          cp my-first-project-298218-7e25767dcc93.json ./kitchen/test/fixtures/secrets/
          cp my-first-project-298218-7e25767dcc93.json ./kitchen/
      # setup gcloud in the image so that we can use with local controller
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.SA_KEY }}
      # Run Kitchen tests 
      - name: kitchen-testing
        run : |
          cd code
          kitchen create
          kitchen converge
          kitchen list
          kitchen verify
      # Run kitchen destroy. This needs to be run even if earlier actions failed
      - name: kitchen-destroy
        if: ${{ always() }}
        run : |
          cd code
          kitchen destroy
      - name: Printing the inputs
        run: |
          echo "Ref - ${{ github.event.inputs.ref }}!"
          echo "Name - ${{ github.event.inputs.sha }}!"